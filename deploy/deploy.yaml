---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  labels:
    app: shepherd
  name: shepherd
spec:
  replicas: 1
  selector:
    matchLabels:
      app: shepherd
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: shepherd
    spec:
      containers:
        - image: quay.io/integreatly/shepherd:dev
          imagePullPolicy: Always
          name: shepherd
          env:
            - name: GOOGLE_APPLICATION_CREDENTIALS
              value: "/data/auth/gchat.json"
            - name: GOOGLE_CHAT_KEY
              valueFrom:
                secretKeyRef:
                  name: gchat-auth
                  key: gkey
          volumeMounts:
            - mountPath: "/data/bolt"
              name: bolt-storage
            - mountPath: "/data/auth"
              name: gchat-auth
          command:
            - /usr/local/bin/shepherd
            - --db-loc=/data/bolt/db
          ports:
            - containerPort: 8080
              protocol: TCP
          readinessProbe:
            httpGet:
              path: /api/sys/info/alive
              port: 8080
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
      volumes:
        - name: bolt-storage
          persistentVolumeClaim:
            claimName: shepherd
        - name: gchat-auth
          secret:
            secretName: gchat-auth
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: shepherd
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 2Gi
  storageClassName: do-block-storage
---
apiVersion: v1
kind: Service
metadata:
  name: shepherd
spec:
  ports:
    - port: 80
      protocol: TCP
      targetPort: 8080
  selector:
    app: shepherd
  sessionAffinity: None
  type: ClusterIP
status:
  loadBalancer: {}
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  annotations:
    certmanager.k8s.io/acme-challenge-type: http01
    certmanager.k8s.io/issuer: letsencrypt-prod
    kubernetes.io/ingress.class: nginx
  name: shepherd
spec:
  rules:
    - host: bot.shepherd.io
      http:
        paths:
          - backend:
              serviceName: shepherd
              servicePort: 80
            path: /
    - host: bot.shepherd.io
      http:
        paths:
          - backend:
              serviceName: shepherd
              servicePort: 80
            path: /
  tls:
    - hosts:
        - shepherd.sprintbot.io
      secretName: bot-shepherd-tls

---
apiVersion: certmanager.k8s.io/v1alpha1
kind: Issuer
metadata:
  name: letsencrypt-prod
spec:
  acme:
    email: craig@sprintbot.io
    http01: {}
    privateKeySecretRef:
      key: ""
      name: letsencrypt-prod
    server: https://acme-v02.api.letsencrypt.org/directory


